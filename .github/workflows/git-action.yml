## This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
## For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven
#
## This workflow uses actions that are not certified by GitHub.
## They are provided by a third-party and are governed by
## separate terms of service, privacy policy, and support
## documentation.
#
#name: Java CI with Maven
#
#on:
#  push:
#    branches: [ "develop" ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v4
#    - name: Set up JDK 17
#      uses: actions/setup-java@v4
#      with:
#        java-version: '17'
#        distribution: 'temurin'
#        cache: maven
#
#    - name: Prepare application.properties
#      run: |
#        mkdir -p src/main/resources
#        echo "${{ secrets.APPLICATION_PROPERTIES }}" > src/main/resources/application.properties
#
#    - name: Build with Maven
#      run: mvn -B clean package --file pom.xml
#
#    - name: web docker build and push
#      run: |
#          echo "${{ secrets.DOCKER_PW }}" | docker login -u ${{ secrets.DOCKER_NAME }} --password-stdin
#          docker build -t ${{ secrets.DOCKER_NAME }}/gagu-server:latest .
#          docker push ${{ secrets.DOCKER_NAME }}/gagu-server:latest
#
#    - name: Deploy to Ubuntu Server
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.HOST }}
#        username: ${{ secrets.USERNAME }}
#        key: ${{ secrets.SSH_PRIVATE_KEY }}
#        script: |
#          sudo docker stop GAGU-SERVER
#          sudo docker rm GAGU-SERVER
#          sudo docker rmi ${{ secrets.DOCKER_NAME }}/gagu-server
#          sudo docker pull ${{ secrets.DOCKER_NAME }}/gagu-server:latest
#          sudo docker run -d -p 8080:8080 --net gagu-network --name GAGU-SERVER ${{ secrets.DOCKER_NAME }}/gagu-server:latest
